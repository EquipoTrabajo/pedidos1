<div class="container">
  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 class="panel-title">Pedido</h3>
    </div>
    <div class="panel-body">
      <form action="/order" method="POST">
        <div class="form-group">
          <label for="coord">Coordenadas:</label>
          <input type="text" id="lat" name="address_deliver.location[1]" class="form-control col-*-6" placeholder="Latitud">
          <input type="text" id="lng" name="address_deliver.location[0]" class="form-control col-*-6" placeholder="Longitud">
        </div>
        <input id="pac-input" name="address_deliver.name" type="text" placeholder="Search Box">
        <div id="map"></div>
        <div>
          <button type="submit" class="btn btn-primary">Pedir</button>
          <a href="/" class="btn btn-danger">Atras</a>
        </div>
      </form>
    </div>
  </div>
</div>
<script>
  var map;
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -34.397, lng: 150.644},
      zoom: 8
    });
    google.maps.event.addListener(map, 'click', function(event) {
      console.log( JSON.stringify(event, null, ' ') );
      document.getElementById('lat').value = event.latLng.lat();
      document.getElementById('lng').value = event.latLng.lng();
    });

    var searchBox = new google.maps.places.SearchBox(document.getElementById('pac-input'));
    map.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById('pac-input'));
    google.maps.event.addListener(searchBox, 'places_changed', function() {
    searchBox.set('map', null);


    var places = searchBox.getPlaces();

    var bounds = new google.maps.LatLngBounds();
    var i, place;
    for (i = 0; place = places[i]; i++) {
      (function(place) {
        var marker = new google.maps.Marker({
          position: place.geometry.location
        });
        marker.bindTo('map', searchBox, 'map');
        google.maps.event.addListener(marker, 'map_changed', function() {
          if (!this.getMap()) {
            this.unbindAll();
          }
        });
        bounds.extend(place.geometry.location);


      }(place));

    }
    map.fitBounds(bounds);
    searchBox.set('map', map);
    map.setZoom(Math.min(map.getZoom(),12));

  });
}
</script>
{{!-- <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script> --}}
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCh2BCQIB04NNDYyulpIio-mIPK0_ZGAzU&libraries=places&callback=initMap" async defer></script>